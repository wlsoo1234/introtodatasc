#formatting to factor
data$gender <- as.factor(data$gender)
data$smoking <- ifelse(test=data$smoking == 1, yes = 0, no = 1)
data$smoking <- as.factor(data$smoking)
#data$yellow_fingers <- ifelse(test=data$yellow_fingers == 1, yes = 0, no = 1)
#data$yellow_fingers<- as.factor(data$yellow_fingers)
#data$anxiety <- ifelse(test=data$anxiety == 1, yes = 0, no = 1)
#data$anxiety <- as.factor(data$anxiety)
#data$peer_pressure <- ifelse(test=data$peer_pressure == 1, yes = 0, no = 1)
#data$peer_pressure <- as.factor(data$peer_pressure)
data$chronic.disease <- ifelse(test=data$chronic.disease == 1, yes = 0, no = 1)
data$chronic.disease <- as.factor(data$chronic.disease)
data$fatigue <- ifelse(test=data$fatigue == 1, yes = 0, no = 1)
data$fatigue <- as.factor(data$fatigue)
data$allergy <- ifelse(test=data$allergy == 1, yes = 0, no = 1)
data$allergy <- as.factor(data$allergy)
#data$wheezing <- ifelse(test=data$wheezing == 1, yes = 0, no = 1)
#data$wheezing <- as.factor(data$wheezing)
#data$alcohol.consuming <- ifelse(test=data$alcohol.consuming == 1, yes = 0, no = 1)
#data$alcohol.consuming <- as.factor(data$alcohol.consuming)
data$coughing <- ifelse(test=data$coughing == 1, yes = 0, no = 1)
data$coughing <- as.factor(data$coughing)
data$shortness.of.breath <- ifelse(test=data$shortness.of.breath == 1, yes = 0, no = 1)
data$shortness.of.breath <- as.factor(data$shortness.of.breath)
#data$swallowing.difficulty <- ifelse(test=data$swallowing.difficulty == 1, yes = 0, no = 1)
#data$swallowing.difficulty <- as.factor(data$swallowing.difficulty)
data$chest.pain <- ifelse(test=data$chest.pain == 1, yes = 0, no = 1)
data$chest.pain <- as.factor(data$chest.pain)
data$lung_cancer <- ifelse(test=data$lung_cancer == "YES", yes = "Unhealthy", no = "Healthy")
data$lung_cancer <- as.factor(data$lung_cancer)
split <- sample.split(data, SplitRatio=0.8)
train <- subset(data, split == "TRUE")
test <- subset(data, split == "FALSE")
mymodel <- glm(lung_cancer ~ ., data=train, family = "binomial")
summary(mymodel)
res <- predict(mymodel, test, type="response")
res
View(res)
res <- predict(mymodel, train, type="response")
res
confmatrix <- table(Actual_Value=train$lung_cancer, Predicted_value = res > 0.5)
confmatrix
(confmatrix[[1,1]] + confmatrix[[2,2]]) / sum(confmatrix)
res <- predict(mymodel, test, type="response")
res
confmatrix <- table(Actual_Value=train$lung_cancer, Predicted_value = res > 0.5)
res <- predict(mymodel, train, type="response")
confmatrix <- table(Actual_Value=train$lung_cancer, Predicted_value = res > 0.5)
confmatrix
View(test)
View(train)
library(caTools)
data <- read.csv("C:\\Users\\soowe\\OneDrive\\Documents\\GitHub\\introtodatasc\\predictive modelling\\LungCancer2.csv")
head(data)
str(data)    # 1= no, 2=yes
colnames(data) <- tolower(colnames(data))
{
#formatting to factor
data$gender <- as.factor(data$gender)
data$smoking <- ifelse(test=data$smoking == 1, yes = 0, no = 1)
data$smoking <- as.factor(data$smoking)
#data$yellow_fingers <- ifelse(test=data$yellow_fingers == 1, yes = 0, no = 1)
#data$yellow_fingers<- as.factor(data$yellow_fingers)
#data$anxiety <- ifelse(test=data$anxiety == 1, yes = 0, no = 1)
#data$anxiety <- as.factor(data$anxiety)
#data$peer_pressure <- ifelse(test=data$peer_pressure == 1, yes = 0, no = 1)
#data$peer_pressure <- as.factor(data$peer_pressure)
data$chronic.disease <- ifelse(test=data$chronic.disease == 1, yes = 0, no = 1)
data$chronic.disease <- as.factor(data$chronic.disease)
data$fatigue <- ifelse(test=data$fatigue == 1, yes = 0, no = 1)
data$fatigue <- as.factor(data$fatigue)
data$allergy <- ifelse(test=data$allergy == 1, yes = 0, no = 1)
data$allergy <- as.factor(data$allergy)
#data$wheezing <- ifelse(test=data$wheezing == 1, yes = 0, no = 1)
#data$wheezing <- as.factor(data$wheezing)
#data$alcohol.consuming <- ifelse(test=data$alcohol.consuming == 1, yes = 0, no = 1)
#data$alcohol.consuming <- as.factor(data$alcohol.consuming)
data$coughing <- ifelse(test=data$coughing == 1, yes = 0, no = 1)
data$coughing <- as.factor(data$coughing)
data$shortness.of.breath <- ifelse(test=data$shortness.of.breath == 1, yes = 0, no = 1)
data$shortness.of.breath <- as.factor(data$shortness.of.breath)
#data$swallowing.difficulty <- ifelse(test=data$swallowing.difficulty == 1, yes = 0, no = 1)
#data$swallowing.difficulty <- as.factor(data$swallowing.difficulty)
data$chest.pain <- ifelse(test=data$chest.pain == 1, yes = 0, no = 1)
data$chest.pain <- as.factor(data$chest.pain)
data$lung_cancer <- ifelse(test=data$lung_cancer == "YES", yes = "Unhealthy", no = "Healthy")
data$lung_cancer <- as.factor(data$lung_cancer)
}
split <- sample.split(data, SplitRatio=0.8)
train <- subset(data, split == "TRUE")
test <- subset(data, split == "FALSE")
mymodel <- glm(lung_cancer ~ ., data=train, family = "binomial")
res <- predict(mymodel, test, type="response")
res
res <- predict(mymodel, train, type="response")
res
view(test)
View(test)
str(test)
str(train)
#Read data
data <- read.csv("https://raw.githubusercontent.com/wlsoo1234/introtodatasc/main/predictive%20modelling/LungCancer2.csv",stringsAsFactors = FALSE)
colnames(data) <- tolower(colnames(data))
str(data)
library(caTools)
data <- read.csv("C:\\Users\\soowe\\OneDrive\\Documents\\GitHub\\introtodatasc\\predictive modelling\\LungCancer2.csv")
head(data)
str(data)    # 1= no, 2=yes
colnames(data) <- tolower(colnames(data))
{
#formatting to factor
data$gender <- as.factor(data$gender)
data$smoking <- ifelse(test=data$smoking == 1, yes = 0, no = 1)
data$smoking <- as.factor(data$smoking)
#data$yellow_fingers <- ifelse(test=data$yellow_fingers == 1, yes = 0, no = 1)
#data$yellow_fingers<- as.factor(data$yellow_fingers)
#data$anxiety <- ifelse(test=data$anxiety == 1, yes = 0, no = 1)
#data$anxiety <- as.factor(data$anxiety)
#data$peer_pressure <- ifelse(test=data$peer_pressure == 1, yes = 0, no = 1)
#data$peer_pressure <- as.factor(data$peer_pressure)
data$chronic.disease <- ifelse(test=data$chronic.disease == 1, yes = 0, no = 1)
data$chronic.disease <- as.factor(data$chronic.disease)
data$fatigue <- ifelse(test=data$fatigue == 1, yes = 0, no = 1)
data$fatigue <- as.factor(data$fatigue)
data$allergy <- ifelse(test=data$allergy == 1, yes = 0, no = 1)
data$allergy <- as.factor(data$allergy)
#data$wheezing <- ifelse(test=data$wheezing == 1, yes = 0, no = 1)
#data$wheezing <- as.factor(data$wheezing)
#data$alcohol.consuming <- ifelse(test=data$alcohol.consuming == 1, yes = 0, no = 1)
#data$alcohol.consuming <- as.factor(data$alcohol.consuming)
data$coughing <- ifelse(test=data$coughing == 1, yes = 0, no = 1)
data$coughing <- as.factor(data$coughing)
data$shortness.of.breath <- ifelse(test=data$shortness.of.breath == 1, yes = 0, no = 1)
data$shortness.of.breath <- as.factor(data$shortness.of.breath)
#data$swallowing.difficulty <- ifelse(test=data$swallowing.difficulty == 1, yes = 0, no = 1)
#data$swallowing.difficulty <- as.factor(data$swallowing.difficulty)
data$chest.pain <- ifelse(test=data$chest.pain == 1, yes = 0, no = 1)
data$chest.pain <- as.factor(data$chest.pain)
data$lung_cancer <- ifelse(test=data$lung_cancer == "YES", yes = "Unhealthy", no = "Healthy")
data$lung_cancer <- as.factor(data$lung_cancer)
}
split <- sample.split(data, SplitRatio=0.8)
train <- subset(data, split == "TRUE")
test <- subset(data, split == "FALSE")
mymodel <- glm(lung_cancer ~ ., data=train, family = "binomial")
res <- predict(mymodel, test, type="response")
res
res <- predict(mymodel, train, type="response")
confmatrix <- table(Actual_Value=train$lung_cancer, Predicted_value = res > 0.5)
confmatrix
res <- predict(mymodel, test, type="response")
confmatrix <- table(Actual_Value=train$lung_cancer, Predicted_value = res > 0.5)
library(shiny)
library(shinythemes)
library(data.table)
library(RCurl)
library(caTools)
#Read data
data <- read.csv("https://raw.githubusercontent.com/wlsoo1234/introtodatasc/main/predictive%20modelling/LungCancer2.csv",stringsAsFactors = FALSE)
#Import libraries
{
library(shiny)
library(shinythemes)
library(data.table)
library(RCurl)
library(caTools)
}
#Read data
data <- read.csv("https://raw.githubusercontent.com/wlsoo1234/introtodatasc/main/predictive%20modelling/LungCancer2.csv",stringsAsFactors = FALSE)
colnames(data) <- tolower(colnames(data))
data
#formatting
{
data$gender <- as.factor(data$gender)
data$smoking <- ifelse(data$smoking == 1, yes = 0, no = 1)
data$yellow_fingers <- ifelse(data$yellow_fingers == 1, yes = 0, no = 1)
data$anxiety <- ifelse(data$anxiety == 1, yes = 0, no = 1)
data$peer_pressure <- ifelse(data$peer_pressure == 1, yes = 0, no = 1)
data$chronic.disease <- ifelse(data$chronic.disease == 1, yes = 0, no = 1)
data$fatigue <- ifelse(data$fatigue == 1, yes = 0, no = 1)
data$allergy <- ifelse(data$allergy == 1, yes = 0, no = 1)
data$wheezing <- ifelse(data$wheezing == 1, yes = 0, no = 1)
data$alcohol.consuming <- ifelse(data$alcohol.consuming == 1, yes = 0, no = 1)
data$coughing <- ifelse(data$coughing == 1, yes = 0, no = 1)
data$shortness.of.breath <- ifelse(data$shortness.of.breath == 1, yes = 0, no = 1)
data$swallowing.difficulty <- ifelse(data$swallowing.difficulty == 1, yes = 0, no = 1)
data$chest.pain <- ifelse(data$chest.pain == 1, yes = 0, no = 1)
data$lung_cancer <- ifelse(data$lung_cancer == "YES", yes = "Cancer Positive", no = "Cancer Negative")
data$lung_cancer <- as.factor(data$lung_cancer)
}
##split data into training and testing
samp <- sample.split(data, SplitRatio = 0.80)
train <- subset(data, samp == TRUE)
testdata<- subset(data, samp == FALSE)
str(train)
#Fitting a random forest model
model0 <- glm(lung_cancer ~ ., data=train, family = "binomial")
ui <- fluidPage(theme = shinytheme("united"),
# Page header
headerPanel('Prediction of lung cancer using the parameter of symptoms and habits'),
# Input values
sidebarPanel(
HTML("<h3>Method: Random Forest</h3>"),
HTML("<h3>Input parameters</h3>"),
tags$h4("Input:"),
radioButtons("GENDER", label = "Gender", choices = c("M","F")),
sliderInput("AGE", "Age",
min = 0, max = 110,
value = 50),
radioButtons("SMOKING", label = "Smoking?", choices = c("Yes","No"),selected = "No"),
radioButtons("YELLOW_FINGERS", label = "Yellow fingers?", choices = c("Yes","No"),selected = "No"),
radioButtons("ANXIETY", label = "Often feeling anxious?", choices = c("Yes","No")),
radioButtons("PEER_PRESSURE", label = "Peer Pressure?", choices = c("Yes","No"),selected = "No"),
radioButtons("CHRONIC.DISEASE", label = "Chronic Disease?", choices = c("Yes","No")),
radioButtons("FATIGUE", label = "Often feeling tired? (Fatigue)", choices = c("Yes","No")),
radioButtons("ALLERGY", label = "Facing allergy?", choices = c("Yes","No"),selected = "No"),
radioButtons("WHEEZING", label = "Wheezing?", choices = c("Yes","No"),selected = "No"),
radioButtons("ALCOHOL.CONSUMING", label = "Often drinking alcohol?", choices = c("Yes","No")),
radioButtons("COUGHING", label = "Coughing?", choices = c("Yes","No")),
radioButtons("SHORTNESS.OF.BREATH", label = "Hard to breath?", choices = c("Yes","No"),selected = "No"),
radioButtons("SWALLOWING.DIFFICULTY", label = "Hard to swallow?", choices = c("Yes","No")),
radioButtons("CHEST.PAIN", label = "Chest Pain?", choices = c("Yes" ,"No"),selected = "No"),
actionButton("submitbutton", "Submit", class = "btn btn-primary")
),
mainPanel(
tags$label(h3('Status/Output')), # Status/Output Text Box
verbatimTextOutput('contents'),
tableOutput('tabledata') # Prediction results table
)
)
server<- function(input, output, session) {
# Input Data
datasetInput <- reactive({
df <- data.frame(
Name = c("GENDER","AGE","SMOKING","YELLOW_FINGERS","ANXIETY",
"PEER_PRESSURE","CHRONIC DISEASE","FATIGUE","ALLERGY",
"WHEEZING","ALCOHOL CONSUMING","COUGHING",
"SHORTNESS OF BREATH","SWALLOWING DIFFICULTY",
"CHEST PAIN"),
Value = as.character(c(input$GENDER, input$AGE, input$SMOKING, input$YELLOW_FINGERS,
input$ANXIETY, input$PEER_PRESSURE, input$CHRONIC.DISEASE,
input$FATIGUE, input$ALLERGY, input$WHEEZING,
input$ALCOHOL.CONSUMING, input$COUGHING,
input$SHORTNESS.OF.BREATH, input$SWALLOWING.DIFFICULTY,
input$CHEST.PAIN)),
stringsAsFactors = FALSE)
for(i in 3:15){
df[i,2] <- ifelse(df[i,2] == "No", "0", "1")
}
lung_cancer <- "lung_cancer"
df<- rbind(df, lung_cancer)
input <- transpose(df)
write.table(input,"rf0.csv", sep=",",
quote = FALSE, row.names = FALSE, col.names = FALSE)
test <- read.csv(paste("rf0", ".csv", sep=""),header = TRUE)
if(test$GENDER == F){
test$GENDER <- "F"
}else{
test$GENDER <- "M"
}
test$GENDER<- as.character(test$GENDER)
{
test$GENDER <- factor(test$GENDER , levels = c("M", "F"))
test$AGE <- as.integer(test$AGE)
test$SMOKING <- as.numeric(test$SMOKING)
test$YELLOW_FINGERS <- as.numeric(test$YELLOW_FINGERS)
test$ANXIETY <- as.numeric(test$ANXIETY)
test$PEER_PRESSURE <- as.numeric(test$PEER_PRESSURE)
test$CHRONIC.DISEASE <- as.numeric(test$CHRONIC.DISEASE)
test$FATIGUE <- as.numeric(test$FATIGUE)
test$ALLERGY <- as.numeric(test$ALLERGY)
test$WHEEZING <- as.numeric(test$WHEEZING)
test$ALCOHOL.CONSUMING <- as.numeric(test$ALCOHOL.CONSUMING)
test$COUGHING <- as.numeric(test$COUGHING)
test$SHORTNESS.OF.BREATH <- as.numeric(test$SHORTNESS.OF.BREATH)
test$SWALLOWING.DIFFICULTY <- as.numeric(test$SWALLOWING.DIFFICULTY)
test$CHEST.PAIN <- as.numeric(test$CHEST.PAIN)
}
colnames(test) <- tolower(colnames(test))
Output <- data.frame(Prediction = predict(model0,test), round(predict(model0,test,type="prob"), 3))
print(Output)
})
# Status/Output Text Box
output$contents <- renderPrint({
if (input$submitbutton>0) {
isolate("Calculation complete.")
} else {
return("Server is ready for calculation.")
}
})
# Prediction results table
output$tabledata <- renderTable({
if (input$submitbutton>0) {
isolate(datasetInput())
}
})
}
####################################
# Create the shiny app             #
####################################
shinyApp(ui = ui, server = server)
Output <- data.frame(Prediction = predict(model0,test), round(predict(model0,test,type="response"), 3))
dsf
res <- predict(mymodel, test, type="response")
res
res <- predict(mymodel, train, type="response")
library(caTools)
data <- read.csv("C:\\Users\\soowe\\OneDrive\\Documents\\GitHub\\introtodatasc\\predictive modelling\\LungCancer2.csv")
head(data)
str(data)    # 1= no, 2=yes
colnames(data) <- tolower(colnames(data))
#formatting to factor
data$gender <- as.factor(data$gender)
data$smoking <- ifelse(test=data$smoking == 1, yes = 0, no = 1)
data$smoking <- as.factor(data$smoking)
#data$yellow_fingers <- ifelse(test=data$yellow_fingers == 1, yes = 0, no = 1)
#data$yellow_fingers<- as.factor(data$yellow_fingers)
#data$anxiety <- ifelse(test=data$anxiety == 1, yes = 0, no = 1)
#data$anxiety <- as.factor(data$anxiety)
#data$peer_pressure <- ifelse(test=data$peer_pressure == 1, yes = 0, no = 1)
#data$peer_pressure <- as.factor(data$peer_pressure)
data$chronic.disease <- ifelse(test=data$chronic.disease == 1, yes = 0, no = 1)
library(caTools)
data <- read.csv("C:\\Users\\soowe\\OneDrive\\Documents\\GitHub\\introtodatasc\\predictive modelling\\LungCancer2.csv")
head(data)
str(data)    # 1= no, 2=yes
colnames(data) <- tolower(colnames(data))
{
#formatting to factor
data$gender <- as.factor(data$gender)
data$smoking <- ifelse(test=data$smoking == 1, yes = 0, no = 1)
data$smoking <- as.factor(data$smoking)
#data$yellow_fingers <- ifelse(test=data$yellow_fingers == 1, yes = 0, no = 1)
#data$yellow_fingers<- as.factor(data$yellow_fingers)
#data$anxiety <- ifelse(test=data$anxiety == 1, yes = 0, no = 1)
#data$anxiety <- as.factor(data$anxiety)
#data$peer_pressure <- ifelse(test=data$peer_pressure == 1, yes = 0, no = 1)
#data$peer_pressure <- as.factor(data$peer_pressure)
data$chronic.disease <- ifelse(test=data$chronic.disease == 1, yes = 0, no = 1)
data$chronic.disease <- as.factor(data$chronic.disease)
data$fatigue <- ifelse(test=data$fatigue == 1, yes = 0, no = 1)
data$fatigue <- as.factor(data$fatigue)
data$allergy <- ifelse(test=data$allergy == 1, yes = 0, no = 1)
data$allergy <- as.factor(data$allergy)
#data$wheezing <- ifelse(test=data$wheezing == 1, yes = 0, no = 1)
#data$wheezing <- as.factor(data$wheezing)
#data$alcohol.consuming <- ifelse(test=data$alcohol.consuming == 1, yes = 0, no = 1)
#data$alcohol.consuming <- as.factor(data$alcohol.consuming)
data$coughing <- ifelse(test=data$coughing == 1, yes = 0, no = 1)
data$coughing <- as.factor(data$coughing)
data$shortness.of.breath <- ifelse(test=data$shortness.of.breath == 1, yes = 0, no = 1)
data$shortness.of.breath <- as.factor(data$shortness.of.breath)
#data$swallowing.difficulty <- ifelse(test=data$swallowing.difficulty == 1, yes = 0, no = 1)
#data$swallowing.difficulty <- as.factor(data$swallowing.difficulty)
data$chest.pain <- ifelse(test=data$chest.pain == 1, yes = 0, no = 1)
data$chest.pain <- as.factor(data$chest.pain)
data$lung_cancer <- ifelse(test=data$lung_cancer == "YES", yes = "Unhealthy", no = "Healthy")
data$lung_cancer <- as.factor(data$lung_cancer)
}
split <- sample.split(data, SplitRatio=0.8)
train <- subset(data, split == "TRUE")
test <- subset(data, split == "FALSE")
mymodel <- glm(lung_cancer ~ ., data=train, family = "binomial")
summary(mymodel)
res <- predict(mymodel, test, type="response")
res
res <- predict(mymodel, train, type="response")
res
confmatrix <- table(Actual_Value=train$lung_cancer, Predicted_value = res > 0.5)
confmatrix
#Import libraries
{
library(shiny)
library(shinythemes)
library(data.table)
library(RCurl)
library(caTools)
}
#Read data
data <- read.csv("https://raw.githubusercontent.com/wlsoo1234/introtodatasc/main/predictive%20modelling/LungCancer2.csv",stringsAsFactors = FALSE)
colnames(data) <- tolower(colnames(data))
data
#formatting
{
data$gender <- as.factor(data$gender)
data$smoking <- ifelse(data$smoking == 1, yes = 0, no = 1)
data$yellow_fingers <- ifelse(data$yellow_fingers == 1, yes = 0, no = 1)
data$anxiety <- ifelse(data$anxiety == 1, yes = 0, no = 1)
data$peer_pressure <- ifelse(data$peer_pressure == 1, yes = 0, no = 1)
data$chronic.disease <- ifelse(data$chronic.disease == 1, yes = 0, no = 1)
data$fatigue <- ifelse(data$fatigue == 1, yes = 0, no = 1)
data$allergy <- ifelse(data$allergy == 1, yes = 0, no = 1)
data$wheezing <- ifelse(data$wheezing == 1, yes = 0, no = 1)
data$alcohol.consuming <- ifelse(data$alcohol.consuming == 1, yes = 0, no = 1)
data$coughing <- ifelse(data$coughing == 1, yes = 0, no = 1)
data$shortness.of.breath <- ifelse(data$shortness.of.breath == 1, yes = 0, no = 1)
data$swallowing.difficulty <- ifelse(data$swallowing.difficulty == 1, yes = 0, no = 1)
data$chest.pain <- ifelse(data$chest.pain == 1, yes = 0, no = 1)
data$lung_cancer <- ifelse(data$lung_cancer == "YES", yes = "Cancer Positive", no = "Cancer Negative")
data$lung_cancer <- as.factor(data$lung_cancer)
}
##split data into training and testing
samp <- sample.split(data, SplitRatio = 0.80)
train <- subset(data, samp == TRUE)
testdata<- subset(data, samp == FALSE)
str(train)
#Fitting a Logistic Regression model
model0 <- glm(lung_cancer ~ ., data=train, family = "binomial")
ui <- fluidPage(theme = shinytheme("united"),
# Page header
headerPanel('Prediction of lung cancer using the parameter of symptoms and habits'),
# Input values
sidebarPanel(
HTML("<h3>Method: Logistic Regression</h3>"),
HTML("<h3>Input parameters</h3>"),
tags$h4("Input:"),
radioButtons("GENDER", label = "Gender", choices = c("M","F")),
sliderInput("AGE", "Age",
min = 0, max = 110,
value = 50),
radioButtons("SMOKING", label = "Smoking?", choices = c("Yes","No"),selected = "No"),
radioButtons("YELLOW_FINGERS", label = "Yellow fingers?", choices = c("Yes","No"),selected = "No"),
radioButtons("ANXIETY", label = "Often feeling anxious?", choices = c("Yes","No")),
radioButtons("PEER_PRESSURE", label = "Peer Pressure?", choices = c("Yes","No"),selected = "No"),
radioButtons("CHRONIC.DISEASE", label = "Chronic Disease?", choices = c("Yes","No")),
radioButtons("FATIGUE", label = "Often feeling tired? (Fatigue)", choices = c("Yes","No")),
radioButtons("ALLERGY", label = "Facing allergy?", choices = c("Yes","No"),selected = "No"),
radioButtons("WHEEZING", label = "Wheezing?", choices = c("Yes","No"),selected = "No"),
radioButtons("ALCOHOL.CONSUMING", label = "Often drinking alcohol?", choices = c("Yes","No")),
radioButtons("COUGHING", label = "Coughing?", choices = c("Yes","No")),
radioButtons("SHORTNESS.OF.BREATH", label = "Hard to breath?", choices = c("Yes","No"),selected = "No"),
radioButtons("SWALLOWING.DIFFICULTY", label = "Hard to swallow?", choices = c("Yes","No")),
radioButtons("CHEST.PAIN", label = "Chest Pain?", choices = c("Yes" ,"No"),selected = "No"),
actionButton("submitbutton", "Submit", class = "btn btn-primary")
),
mainPanel(
tags$label(h3('Status/Output')), # Status/Output Text Box
verbatimTextOutput('contents'),
tableOutput('tabledata') # Prediction results table
)
)
server<- function(input, output, session) {
# Input Data
datasetInput <- reactive({
df <- data.frame(
Name = c("GENDER","AGE","SMOKING","YELLOW_FINGERS","ANXIETY",
"PEER_PRESSURE","CHRONIC DISEASE","FATIGUE","ALLERGY",
"WHEEZING","ALCOHOL CONSUMING","COUGHING",
"SHORTNESS OF BREATH","SWALLOWING DIFFICULTY",
"CHEST PAIN"),
Value = as.character(c(input$GENDER, input$AGE, input$SMOKING, input$YELLOW_FINGERS,
input$ANXIETY, input$PEER_PRESSURE, input$CHRONIC.DISEASE,
input$FATIGUE, input$ALLERGY, input$WHEEZING,
input$ALCOHOL.CONSUMING, input$COUGHING,
input$SHORTNESS.OF.BREATH, input$SWALLOWING.DIFFICULTY,
input$CHEST.PAIN)),
stringsAsFactors = FALSE)
for(i in 3:15){
df[i,2] <- ifelse(df[i,2] == "No", "0", "1")
}
lung_cancer <- "lung_cancer"
df<- rbind(df, lung_cancer)
input <- transpose(df)
write.table(input,"rf0.csv", sep=",",
quote = FALSE, row.names = FALSE, col.names = FALSE)
test <- read.csv(paste("rf0", ".csv", sep=""),header = TRUE)
if(test$GENDER == F){
test$GENDER <- "F"
}else{
test$GENDER <- "M"
}
test$GENDER<- as.character(test$GENDER)
{
test$GENDER <- factor(test$GENDER , levels = c("M", "F"))
test$AGE <- as.integer(test$AGE)
test$SMOKING <- as.numeric(test$SMOKING)
test$YELLOW_FINGERS <- as.numeric(test$YELLOW_FINGERS)
test$ANXIETY <- as.numeric(test$ANXIETY)
test$PEER_PRESSURE <- as.numeric(test$PEER_PRESSURE)
test$CHRONIC.DISEASE <- as.numeric(test$CHRONIC.DISEASE)
test$FATIGUE <- as.numeric(test$FATIGUE)
test$ALLERGY <- as.numeric(test$ALLERGY)
test$WHEEZING <- as.numeric(test$WHEEZING)
test$ALCOHOL.CONSUMING <- as.numeric(test$ALCOHOL.CONSUMING)
test$COUGHING <- as.numeric(test$COUGHING)
test$SHORTNESS.OF.BREATH <- as.numeric(test$SHORTNESS.OF.BREATH)
test$SWALLOWING.DIFFICULTY <- as.numeric(test$SWALLOWING.DIFFICULTY)
test$CHEST.PAIN <- as.numeric(test$CHEST.PAIN)
}
colnames(test) <- tolower(colnames(test))
Output <- data.frame(Prediction = predict(model0,train,type = "response"), round(predict(model0,test,type="response"), 3))
print(Output)
})
# Status/Output Text Box
output$contents <- renderPrint({
if (input$submitbutton>0) {
isolate("Calculation complete.")
} else {
return("Server is ready for calculation.")
}
})
# Prediction results table
output$tabledata <- renderTable({
if (input$submitbutton>0) {
isolate(datasetInput())
}
})
}
####################################
# Create the shiny app             #
####################################
shinyApp(ui = ui, server = server)
